
from flask import Flask, request, jsonify
from pymongo import MongoClient
import bcrypt
import jwt
import datetime
from decouple import config

app = Flask(__name__)
client = MongoClient('mongodb://localhost:27017/')
db = client['mydatabase']
users_collection = db['users']

app.config['SECRET_KEY'] = config('SECRET_KEY', default='your_default_secret_key')

@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    username = data.get('username')
    password = data.get('password')

    user = users_collection.find_one({'username': username})
    if user and bcrypt.checkpw(password.encode('utf-8'), user['password']):
        expiration_time = datetime.datetime.utcnow() + datetime.timedelta(hours=1)
        token = jwt.encode({'username': username, 'exp': expiration_time}, app.config['SECRET_KEY'], algorithm='HS256')
        return jsonify({'token': token.decode('utf-8')})
    else:
        return jsonify({'message': 'Invalid username or password'}), 401

if __name__ == '__main__':
    app.run(debug=True)
In this updated code:

The secret key is now read from an environment variable using python-decouple.
Specific error messages are provided for failed login attempts.
Token expiration time is set to 1 hour for added security.
The secret key is now stored in the Flask configuration.
Make sure to install the python-decouple library using:

bash
Copy code
pip install python-decouple
Adjust the code further based on your specific requirements and additional features you might want to implement.
